// a neutral colour to fill space while responsive images load
$rsp-img-bg-color: #111111;

// Responsive image
// Make the <img> fill the container
.img-rsp {
    width: 100%;
    display: block;
}

// An empty box that maintains ratio when resizing (square by default).
// Any <img> inside will fill the ratio
// Can also be used for background images
/*
<div class="img-ratiobox img-ratiobox-4x3">
  <img src="..." />
</div>

*/
.ratiobox {
    width: 100%;
    position: relative;
    height: 0;
    overflow: hidden;
    padding-bottom: 1/(16/9) * 100%; // 16x9 by default

    > img,
    > .ratiobox__inner {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        width: 100%;
        height: 100%;
    }
}

// set the placeholder background
// fade from off-black to off-white (full black/white is too 'bright')
//noinspection SassScssResolvedByNameOnly
.ratiobox {
    background: #111111;
    background:
    linear-gradient(
        to right,
        #111111 0%,
        #111111 20%,
        #404040 20%,
        #404040 40%,
        #808080 40%,
        #808080 60%,
        #bfbfbf 60%,
        #bfbfbf 80%,
        #eeeeee 80%,
        #eeeeee 100%
    ),
    linear-gradient(
        90deg,
        #eeeeee,
        #111111
    );
    background-repeat: no-repeat;
    background-size: 100% 10%, 100% 100%;
}

.ratiobox--no-bg {
    background: none;
}

// Maths for ratio: 1/(w/h) * 100%
// Thankfully sass will do that calculation for us
.ratiobox--32x9 {
    padding-bottom: 1/(32/9) * 100%;
}

.ratiobox--16x9 {
    padding-bottom: 1/(16/9) * 100%;
}

.ratiobox--4x3 {
    padding-bottom: 1/(4/3) * 100%;
}

.ratiobox--3x2 {
    padding-bottom: 1/(3/2) * 100%;
}

.ratiobox--1x1 {
    padding-bottom: 1/(1/1) * 100%;
}
